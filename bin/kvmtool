#!/bin/bash


#
# create kvm domain
# * default config
# * domain config
# * preseed file
#
# delete kvm domain
# * destroy and undefine domain
# * destroy and undefine lv
#
#
# example use:
# kvmtool create mydomain from mydefaultconfig
# kvmtool wipe mydomain
#


function usage {

if [ -n "$1" ]; then
    echo -e "\n$1\n\n"
fi

cat <<EOL

usage:

kvmtool create <domain> like <config>
    creates a domain from a default config

kvmtool wipe <domain>
    deletes a domain and its logical volume

kvmtool template
    outputs a default configuration to stdout

<domain> and <config> are both config files like that from the template command

EOL

exit 0
}


function die {
    echo
    echo "$*"
    echo
    exit 1
}

CONFVARS="LOCATION PRESEEDSOURCEDIR PRESEEDTARGET PRESEEDSERVER KVMHOST DNSDOMAIN VCPUS RAM SIZE PVNAME GRAPHICS NETWORK PRESEEDNAME DEFAULTSETUP OTHERSETUP NAME NETWORK HOSTNETWORKSETUP CPU OSTYPE VIRTTYPE"
function output_template {
cat << 'EOL'
#
# global/default options
#
LOCATION="http://ftp.debian.org/debian/dists/squeeze/main/installer-amd64/"
PRESEEDSOURCEDIR="./preseeds"
PRESEEDTARGET="/var/www/"
PRESEEDSERVER="http://10.17.17.22"

# use proxy:
http_proxy="http://10.17.17.22:8080"
https_proxy="http://10.17.17.22:8080"
ftp_proxy="http://10.17.17.22:8080"


#
# host settings
#

KVMHOST="ziolkowski"
CPU="host"
VIRTTYPE="kvm"
OSTYPE="linux"


#
# default kvm domain settings
#
DNSDOMAIN="int.druidenkacke.de"
VCPUS=1
RAM=1024
SIZE=5
PVNAME="vg0"
GRAPHICS="vnc"
NETWORK="network=intranet"
PRESEEDNAME="simpleserver"
DEFAULTSETUP="\
preseed/late_command=mkdir /target/root/.ssh;echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwi2I1fJOCFC9NXE6CV2o0fHpdZwM9+B8IVPlJFBe5wjyhQ6M35qwa21bfmDetshriYHN3MhFKLUajVLEGvEM37oxLEN+/nLepnO3suBd0PW5Y8aEnk9HGTXw0dntJd4OeFUMefRyy/pcfFxbhXwkjnPHI9tuod3LTfzvrV4ribLxtBFFCoDLecCSCjaG0ykaVbj7kl7BkHXFhACmwaKOhekJPuHxWlFm8rU1ESG8QyCYqRYCVRfIvcHH+kqjpkk1QxwRaF1PXzXkM2mhMti/ywBmTEa3syKswA8Hap29QD1AfD1o6Brc4UNgeO4OcHCsgJbv9U0GXhjCOqn56jDHX /home/nuts/.ssh/id_rsa >/target/root/.ssh/authorized_keys \
"

#
# host specific configuration
#
#NAME=nameofvirtualmachine
NAME=
NETWORK="network=intranet"
HOSTNETWORKSETUP="\
interface=eth0 \
netcfg/disable_dhcp=true \
netcfg/get_nameservers=10.17.17.2 \
netcfg/get_ipaddress=10.17.17.249 \
netcfg/get_netmask=255.255.255.0 \
netcfg/get_gateway=10.17.17.2 \
netcfg/confirm_static=true \
mirror/http/proxy=http://10.17.17.22:8080 \
"
OTHERSETUP="\
passwd/root-password=aiGhi3poodeighu
"


EOL
}



function sanitycheck_create {
    for v in $CONFVARS; do
        x=$(eval echo -n "\$$v")
        if [ -z "$x" ]; then
            die "config error: $v must must be set"
        fi
    done
    D "configuration is valid"
}


function create_domain {
    set -e 

    D "checking whether $NAME already exists..."
    # check whether a $name domain already exists
    if virsh -c "$KVMHOST" domid "$NAME" >/dev/null 2>&1; then
        die "there already is a domain called $NAME bailing out"
    fi

    # check whether a $name volume already exists
    if virsh -c "$KVMHOST" vol-path --pool "$PVNAME" "$NAME" >/dev/null 2>&1; then
        die "there already is a volume called $NAME bailing out"
    fi

    preseedcfg="$PRESEEDSOURCEDIR/$PRESEEDNAME.cfg" 
    preseedurl="$PRESEEDSERVER/$PRESEEDNAME.cfg"

    D "checking preseed file..."
    if [ ! -f "$preseedcfg" ]; then
        die "could not find preseed file $preseedcfg"
    fi

    if [ "$ASKBEFORECREATE" != "NO" ]; then

    cat <<EOL

    going to create domain "$NAME" (cpus:$VCPUS, ram:${RAM}kb, disk:${SIZE}gb) on PV $PVNAME
    press ENTER to continue or CTRL-C to abort"

EOL
    read
    fi 

    D "copy preseed file to webserver..."
    rsync -a "$preseedcfg" "$PRESEEDTARGET"


    D "create domain $NAME"
    time virt-install \
        --connect="$KVMHOST" \
        --name="$NAME" \
        --ram="$RAM" \
        --vcpus="$VCPUS" \
        --cpu="$CPU" \
        --os-type="$OSTYPE" \
        --virt-type="$VIRTTYPE" \
        --noautoconsole \
        --wait=-1 \
        --hvm \
        --network="$NETWORK" \
        --graphics="$GRAPHICS" \
        --disk="/dev/$PVNAME/$NAME,size=$SIZE" \
        --location="$LOCATION" \
        --extra-args="auto=true hostname=$NAME domain=$DNSDOMAIN $DEFAULTSETUP $HOSTNETWORKSETUP $OTHERSETUP url=$preseedurl"

}

function cmd_create {

    domain="$1"
    default="$3" 
    [ "$2" == "like" ] || usage "create command syntax error"

    # load domain config
    domainconf="$KVMTOOLCONFIGDIR/$domain.conf"
    defaultconf="$KVMTOOLCONFIGDIR/$default.conf"

    if   [ ! -f "$domainconf" ]; then
        die "error: $domainconf not found"
    fi

    if   [ ! -f "$defaultconf" ]; then
        die "error: $defaultconf not found"
    fi

    # first load default config then domain config
    source "$defaultconf"
    source "$domainconf"

    D "configuration loaded"
    # make sure all vars are available...
    sanitycheck_create
    create_domain
}

function cmd_wipe {
    D "wipe mode"
    domain="$1"
    #virsh -c ziolkowski "destroy test;undefine test;vol-delete test --pool vg0"
}

function D {
    echo "$*" 1>&2
}

#
# main
#
mode="$1"
shift

if [ -z "$KVMTOOLCONFIGDIR" ]; then
    KVMTOOLCONFIGDIR="configs"
fi


case $mode in
    create)
        D "using config dir $KVMTOOLCONFIGDIR"
        cmd_create "$1" "$2" "$3"
        exit 0
        ;;
    wipe)
        D "using config dir $KVMTOOLCONFIGDIR"
        cmd_wipe "$1"
        exit 0
        ;;
    template)
        output_template
        exit 0
        ;;
    *)
        usage
        ;;
esac
